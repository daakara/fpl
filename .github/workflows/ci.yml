name: FPL Analytics CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run security scan
      run: |
        safety check
        bandit -r . -f json -o security-report.json || true
    
    - name: Run code quality checks
      run: |
        black --check --diff .
        flake8 .
        isort --check-only --diff .
    
    - name: Run type checks
      run: |
        mypy . --ignore-missing-imports || true
    
    - name: Run tests
      run: |
        pytest --cov=. --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Build application
      run: |
        echo "Application built successfully"
        # Add actual build steps here if needed
    
    - name: Create deployment artifact
      run: |
        tar -czf fpl-analytics.tar.gz --exclude='.git' --exclude='__pycache__' --exclude='*.pyc' .
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: fpl-analytics
        path: fpl-analytics.tar.gz
